FROM pytorch/pytorch:2.0.0-cuda11.7-cudnn8-runtime

# Çalışma dizinini ayarla
WORKDIR /app

# Ortam değişkenlerini ayarla
ENV MODEL_PATH=/app/models/model.pt
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0

# Gerekli sistem paketlerini yükle
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    curl \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Basit paket kurulumları - Aşamalı olarak
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir runpod
RUN pip install --no-cache-dir numpy pillow
RUN pip install --no-cache-dir opencv-python-headless
RUN pip install --no-cache-dir psutil
RUN pip install --no-cache-dir ultralytics

# Uygulama dosyalarını kopyala
COPY handler.py model.py utils.py /app/

# Model dizinini oluştur
RUN mkdir -p /app/models

# Başlangıç scripti oluştur - sadece 2712.pt indirme stratejisi ile
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "==== SİSTEM BİLGİLERİ ===="\n\
python --version\n\
pip list | grep -e torch -e numpy -e ultra -e opencv -e psutil\n\
nvidia-smi || echo "nvidia-smi bulunamadı"\n\
\n\
if [ ! -f ${MODEL_PATH} ]; then\n\
    echo "Model yok, GitHub\'dan 2712.pt indiriliyor: ${MODEL_PATH}"\n\
    mkdir -p /app/models\n\
    \n\
    # Doğru GitHub linkini kullan: main dalı\n\
    if wget -q -O ${MODEL_PATH} https://github.com/Proq3n/solar-panel-analysis-runpod/raw/main/2712.pt; then\n\
        echo "Model başarıyla indirildi (GitHub 2712.pt): $(du -h ${MODEL_PATH})"\n\
        echo "Model içeriği kontrolü (ilk birkaç bayt): $(hexdump -n 32 -C ${MODEL_PATH} | head -n 2)"\n\
    else\n\
        echo "HATA: GitHub\'dan 2712.pt indirme başarısız."\n\
        echo "Link: https://github.com/Proq3n/solar-panel-analysis-runpod/raw/main/2712.pt"\n\
        echo "Wget durumu: $?"\n\
        echo "Sistem kontrolü:"\n\
        df -h\n\
        echo "Disk alanı yetersiz olabilir veya GitHub erişimi engellenmiş olabilir."\n\
        echo "Model indirilemedi veya dosya boş."\n\
        exit 1\n\
    fi\n\
else\n\
    echo "Model zaten mevcut: ${MODEL_PATH}"\n\
    ls -la ${MODEL_PATH}\n\
fi\n\
\n\
# Model erişim iznini kontrol et ve model dosyasının geçerli olduğunu doğrula\n\
if [ -f ${MODEL_PATH} ]; then\n\
    chmod 644 ${MODEL_PATH}\n\
    echo "Model dosyası izinleri güncellendi: $(ls -la ${MODEL_PATH})"\n\
    \n\
    # Model dosyasının boyut kontrolü\n\
    MODEL_SIZE=$(stat -c%s "${MODEL_PATH}")\n\
    if [ "${MODEL_SIZE}" -lt 10000 ]; then\n\
        echo "UYARI: Model dosyası çok küçük (${MODEL_SIZE} byte), geçerli bir model olmayabilir."\n\
        echo "İçerik kontrolü:"\n\
        hexdump -n 100 -C ${MODEL_PATH}\n\
    else\n\
        echo "Model dosyası boyutu makul görünüyor: ${MODEL_SIZE} byte"\n\
    fi\n\
fi\n\
\n\
echo "RunPod API başlatılıyor (GPU modu)..."\n\
exec python -u handler.py\n\
' > /app/start.sh && chmod +x /app/start.sh

# Başlangıç komutu 
CMD ["/bin/bash", "/app/start.sh"] 
